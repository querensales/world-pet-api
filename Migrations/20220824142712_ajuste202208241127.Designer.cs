// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorldPetApi.Data;

#nullable disable

namespace WorldPetApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220824142712_ajuste202208241127")]
    partial class ajuste202208241127
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("WorldPetApi.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Cpf")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PrimeiroNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("WorldPetApi.Entities.Especie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Especie");
                });

            modelBuilder.Entity("WorldPetApi.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EspecieId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdEspecie")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdRaca")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RacaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EspecieId");

                    b.HasIndex("RacaId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("WorldPetApi.Entities.Raca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EspecieId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdEspecie")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EspecieId");

                    b.ToTable("Raca");
                });

            modelBuilder.Entity("WorldPetApi.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("WorldPetApi.Entities.Pet", b =>
                {
                    b.HasOne("WorldPetApi.Entities.Cliente", "Cliente")
                        .WithMany("Pets")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorldPetApi.Entities.Especie", "Especie")
                        .WithMany()
                        .HasForeignKey("EspecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorldPetApi.Entities.Raca", "Raca")
                        .WithMany()
                        .HasForeignKey("RacaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Especie");

                    b.Navigation("Raca");
                });

            modelBuilder.Entity("WorldPetApi.Entities.Raca", b =>
                {
                    b.HasOne("WorldPetApi.Entities.Especie", "Especie")
                        .WithMany("Raca")
                        .HasForeignKey("EspecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");
                });

            modelBuilder.Entity("WorldPetApi.Entities.Cliente", b =>
                {
                    b.Navigation("Pets");
                });

            modelBuilder.Entity("WorldPetApi.Entities.Especie", b =>
                {
                    b.Navigation("Raca");
                });
#pragma warning restore 612, 618
        }
    }
}
